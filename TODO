A brainstorm of pseudo-random ideas for fll-builder:

* Flatten out source directory
#-------------------------------------#
Before:
.
|-- debian
|-- etc
|   |-- default
|   `-- fll-builder
|       `-- packages
|           `-- packages.d
`-- usr
    `-- share
        `-- fll-builder
            |-- functions.d
            `-- templates
                `-- sidux
                    |-- boot
                    |   `-- grub
                    `-- release
#-------------------------------------#
After:
.
|-- debian
|-- etc
|   `-- default
|-- packages
|   `-- packages.d
|-- functions
|   `-- functions.d
|-- templates
|   |-- boot
|   `-- release
`-- data
#-------------------------------------#

* Func-ify the various specific chroot/build operations
  - create nice framework for this, with skeleton/templates
  - could extensively use bash fucntions
    or
  - could use a ./bin/ directory and allow more freedom in choice
    of tool/language
  - each function/util should process arguments and have well documented API

* Log build operations to file

* Parrallel chroot building for multi-arch

* Documentation
  - users guide
  - developers guide

* Provide build statistics
  - time
  - size

* Tool to validate package lists (bfree has done work in this area)

* A kit for semi-automating builds
  - cron job
  - howto make kernel easier to handle in current (zip) form
    - possibly making a "kernel" dir in fll-builder layout(?)
    - provide mirror selection + sane defaults
