#!/bin/bash

make_fll_iso() {
	local ISOSORTLIST=$(mktemp -p $FLL_BUILD_TEMP fll.isosortlist.XXXXX)

	cat > "$ISOSORTLIST" \
<<EOF
$FLL_BUILD_RESULT/boot/grub/* 111111
$FLL_BUILD_RESULT/boot/* 111110
${FLL_BUILD_RESULT}${FLL_MOUNTPOINT} 100001
EOF

	# set default ISO name
	case $DEBOOTSTRAP_ARCH in
		i?86)
			FLL_ISO_NAME="$(tr a-z A-Z <<< ${FLL_DISTRO_NAME}-${FLL_DISTRO_VERSION}-${FLL_PACKAGE_TIMESTAMP}-${FLL_DISTRO_CODENAME_SAFE}\.ISO)"
			;;
		amd64|x86_64)
			FLL_ISO_NAME="$(tr a-z A-Z <<< ${FLL_DISTRO_NAME}64-${FLL_DISTRO_VERSION}-${FLL_PACKAGE_TIMESTAMP}-${FLL_DISTRO_CODENAME_SAFE}\.ISO)"
			;;
		*)
			FLL_ISO_NAME="$(tr a-z A-Z <<< ${FLL_DISTRO_NAME}-${DEBOOTSTRAP_ARCH}-${FLL_DISTRO_VERSION}-${FLL_PACKAGE_TIMESTAMP}-${FLL_DISTRO_CODENAME_SAFE}\.ISO)"
			;;
	esac

	# make the iso
	echo "> Create ISO."
	genisoimage -v -pad -l -r -J \
		-V "$FLL_DISTRO_NAME_UC" \
		-A "$FLL_DISTRO_NAME_UC LIVE LINUX CD" \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		-b boot/grub/iso9660_stage1_5 -c boot/grub/boot.cat \
		-hide-rr-moved \
		-sort "$ISOSORTLIST" \
		-o "$FLL_BUILD_AREA"/"$FLL_ISO_NAME" \
		"$FLL_BUILD_RESULT"
	
	# generate md5sums
	echo "> Calculate md5sums for the resulting ISO."
	pushd "$FLL_BUILD_AREA" >/dev/null
		md5sum -b "$FLL_ISO_NAME" > "$FLL_ISO_NAME".MD5
	popd >/dev/null

	# retrieve package and source lists
	for list in "$FLL_BUILD_CHROOT"/fll.pkglist.* "$FLL_BUILD_CHROOT"/fll.srclist.* \
		"$FLL_BUILD_TEMP"/fll.exclude-file.*; do
		if [[ -f $list ]]; then
			case "$list" in
				*fll.pkglist.*)
					cp -v "$list" "$FLL_BUILD_AREA"/"${FLL_ISO_NAME}.MANIFEST"
					;;
				*fll.srclist.*)
					cp -v "$list" "$FLL_BUILD_AREA"/"${FLL_ISO_NAME}.SOURCES"
					;;
				*fll.exclude-file.*)
					[[ $DEBUG ]] && cp -v "$list" "$FLL_BUILD_AREA"/"${FLL_ISO_NAME}.EXCLUSIONS"
					;;
			esac
		fi
	done
	
	# if started as user, apply user ownership to output (based on --uid)
	if [[ $FLL_BUILD_OUTPUT_UID != 0 ]]; then
		chown "$FLL_BUILD_OUTPUT_UID":"$FLL_BUILD_OUTPUT_UID" \
			"$FLL_BUILD_AREA"/"$FLL_ISO_NAME"*
	fi
}

make_fll_iso
