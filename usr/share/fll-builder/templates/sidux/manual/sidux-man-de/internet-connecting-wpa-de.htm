<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<title>Sidux Manuals - XXXXXXXXXXXXXXX</title>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<style type="text/css">@import url("../lib/css-js/content.css");</style>
	<style type="text/css">@import url("../lib/css-js/menu.css");</style>
	<script type="text/javascript" src="../lib/css-js/menu2.js"></script>
</head>
<body>
<div id="menu">
<!-- menu starts here -->
<img src="../lib/sidux-logo.png" alt="logo" id="menu-header" />
	<ul id="top-list">
		<li><a href="http://sidux.com/">Zur&#252;ck zum sidux Hauptmen&#252;</a></li>
	</ul>
	<!--<h2>Welcome to the Official Sidux Manual</h2>-->
	<ul>
<!-- menu last updated by bluewater 22/12/2006 0230hrs ADEST 21/12/2006 1530hrs UTC -->
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-de.htm">Willkommen bei sidux</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-de.htm#welcome-gen">Offizielles Handbuch</a></li>
				<li><a href="welcome-de.htm#how-to">Tips zum Handbuch</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-content-de.htm">CD Inhalt</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-de.htm#cd-content">CD Inhalt</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="cd-dl-burning-de.htm">CD Herunterladen &amp; Brennen</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="cd-dl-burning-de.htm#download-sidux">CD Herunterladen&amp;Brennen</a></li>
				<li><a href="cd-dl-burning-de.htm#md5">md5 Pr&#252;fsummen</a></li>
				<li><a href="cd-dl-burning-de.htm#burn-nero">Brennen in Windows</a></li>
				<li><a href="cd-dl-burning-de.htm#burn-linux">Brennen in Linux</a></li>
				<li><a href="cd-dl-burning-de.htm#IO-errors">Ein-/Ausgabefehler</a></li>
				<li><a href="cd-dl-burning-de.htm#xdelta">xdelta Patches</a></li>
				<li><a href="cd-no-gui-burn-de.htm">Brennen ohne GUI</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="live-mode-de.htm">LiveCD Modus</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="live-mode-de.htm#rootpw">Das Rootpasswort der sidux-LiveCD</a></li>
				<li><a href="live-mode-de.htm#unionfs">Unionfs - Software im LiveCD Modus installieren</a></li>
				<li><a href="live-mode-de.htm#ntfs-3g">Schreiben auf NTFS Partitionen mit ntfs-3g</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="cheatcodes-de.htm">Boot CheatCodes</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="cheatcodes-de.htm#cheatcodes">Cheatcodes</a></li>
				<li><a href="cheatcodes-vga-de.htm#vga">VGA Codes</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="internet-connecting-de.htm">Internet und Netzwerk</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="ntp-server-de.htm#ntp-server">Timeserver Setup</a></li>
				<li><a href="internet-connecting-de.htm#internetsharing">Internet teilen</a></li>
				<li><a href="samba-de.htm#ssh-x">X Window Programme via SSH verwenden</a></li>
				<li><a href="samba-de.htm#ssh-f">GUI SSH mit Konqueror</a></li>
				<li><a href="samba-de.htm#ssh-w">SSH X-Forwarding von Windows</a></li>
				<li><a href="samba-de.htm#configure">SAMBA Windows Freigaben nutzen</a></li>
				<li><a href="samba-de.htm#setup">Samba Server aufsetzen</a></li>
				<li>
				<a href="internet-connecting-de.htm#ndiswrapper">Ndiswrapper</a></li>
				<li><a href="internet-connecting-wpa-de.htm#wpa">WIFI-WLAN</a></li>
				<li><a href="internet-connecting-de.htm#netcardconfig">Internet &amp; Netzwerk</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="part-gparted-de.htm">Partitionieren der Festplatte</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="part-gparted-de.htm#partition">mit GParted</a></li>
				<li><a href="part-gparted-de.htm#ntfs">NTFS-Partitionen mit GParted &#228;ndern</a></li>
				<li><a href="part-cfdisk-de.htm#disknames">Namen der Festplatten</a></li>
				<li><a href="part-cfdisk-de.htm#partition">mit cfdisk</a></li>
				<li><a href="part-cfdisk-de.htm#formating">Formatieren mit cfdisk</a></li>
				<li><a href="part-size-examp-de.htm#part-example">Partitionsgr&#246;&#223;en: Beispiele</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hd-install-de.htm">Installationsoptionen</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hd-install-de.htm#Inst-prep">Vorbereiten der Installation</a></li>
				<li><a href="hd-install-de.htm#Installation">Installation auf die Festplatte</a></li>
				<li><a href="hd-install-de.htm#first-hd-boot">Erstes Booten von der Festplatte</a></li>
				<li><a href="hd-install-opts-de.htm#perst-home">Permanentes Homeverzeichnis</a></li>
				<li><a href="hd-install-opts-de.htm#fromiso">Booten 'fromiso'</a></li>
				<li><a href="hd-install-opts-de.htm#usb-hd">Installation auf eine USB-Festplatte</a></li>
				<li><a href="hd-install-opts-de.htm#qemu">Installation &#252;ber qemu</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="term-konsole-de.htm">Der Terminal / die Konsole</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="term-konsole-de.htm#konsole"> Terminal/Konsole</a></li>
				<li><a href="term-konsole-de.htm#cli-help">Kommadozeilenhilfe</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-de.htm">Graphikkarten, Hardware Ger&#228;te und Treiber</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="hw-dev-hw-dri-de.htm#nvidia">nVidia</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#ati">ATI</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#native">Native</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#hd-ntfs3g">HD Schreiben auf NTFS Partitionen mit ntfs-3g</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="kde-de.htm">KDE</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="kde-de.htm#desk-freeze">KDE Desktop friert ein</a></li>
				<li><a href="kde-de.htm#kde-login">Kein Login in KDE</a></li>
				<li><a href="kde-de.htm#ch-th">Themes &#228;ndern</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="sys-admin-apt-de.htm">System Administration</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="sys-admin-apt-de.htm#apt-cook">APT Kochbuch</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-install">Neue Pakete installieren</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-delete">Pakete l&#246;schen</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-upgrade">Upgrade eines installierten Systems</a></li>
				<li><a href="sys-admin-upgrade-de.htm#live-cd-upgrade">Upgrade durch die LiveCD</a></li>
				<li><a href="sys-admin-upgrade-de.htm#hd-upgrade">Upgrade einer Festplatteninstallation</a></li>
				<li><a href="sys-admin-kern-upg-de.htm#kern-upgrade">Upgrade des Kernels</a></li>
				<li><a href="sys-admin-de.htm#start-services">Einen Dienst in sidux starten</a></li>
				<li><a href="sys-admin-de.htm#pw-lost">Root Passwort vergessen</a></li>
				<li><a href="sys-admin-de.htm#mon-res">Aufl&#246;sung des Bildschirms</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#mbr-grub-boot">MBR - Bootsektor &#252;berschrieben</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#boot-grub-floppy">Eine Boot-Floppy erstellen</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#remove-grub">Grub vom MBR enfernen</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#what-is-grub">Grub der Bootmanager</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here -->
</div>
<div id="main-page">
	<div class="divider" id="wpa">
		<h2>Arbeitweisen des wpasupplicant in Debian</h2>

			<p>Das Debian wpasupplicant Paket unterst&#252;tzt zwei  Arbeitsweisen die beide sehr nahe dem Kern der Netzwerk Infrastruktur (ifupdown) integriert sind.</p>

		<h4>Inhaltsangabe</h4>
<ol>
	<li><h6>Spezifizieren des wpa_supplicant Treiber Backends</h6>
        	  <p>* Tabelle der unterst&#252;tzten Treiber<br />
	         * Treiberempfehlungen</p></li>
	<li><h6>Modus #1: Managed Mode</h6>
	          <p>* Beispiele<br />
	          * Tabelle der gemeinen Optionen<br />
	          * Wichtige Anmerkungen zur Managed Mode<br />
	          * Wie mans macht</p></li>
	<li><h6>Mode #2: Roaming Mode</h6>
	          <p>* wpa_supplicant.conf<br />
	          * /etc/network/interfaces<br />
	          * Kontrolle des Roaming Daemons mit wpa_action<br />
	          * Nachkorrektur der Roaming Einstellungen<br />
	          * Das Logfile<br />
	          * Nutzung von externen Mapping Skripten (z.B. 	guessnet)<br />
	          * /etc/network/interfaces mit externem mapping</p></li>
	<li><h6>Probleml&#246;sungen</h6>
        	  <p>* Versteckte Essids</p></li>
	<li><h6>Sicherheitserw&#228;gungen</h6>
        	  <p>* Konfiguration der Dateirechte</p></li>
</ol>

		<h4>1. Spezifikation des wpa_supplicant Treiber Backends</h4>

			<p>Wird kein von der Karte ben&#246;tigter Treibertyp explizit per "wpa_driver" ausgew&#228;hlt wird der 'wext' Treiber benutzt. Verwendet man einen 2.4er Kernel, oder einen 2.6er Kernel kleiner 2.6.14 muss der wpa Treibertyp definiert werden.</p>

	</div>	

	
		<h4>Tabelle der unterst&#252;tzten Treiber</h4>

			<p>Eine Zusammenfassung folgt weiter unten</p>

	<div>
		<table>
			<tbody>
				<tr>
					<th>Treiber</th>
					<th>Beschreibung</th>
				</tr>
				<tr>
					<td>hostap</td>
					<td>Host AP driver (Intersil Prism2/2.5/3)</td>
				</tr>
				<tr>
					<td>madwifi</td>
					<td>MADWIFI 802.11 support (Atheros, etc.)</td>
				</tr>
				<tr>
					<td>atmel</td>
					<td>ATMEL AT76C5XXx (USB, PCMCIA)</td>
				</tr>
				<tr>
					<td>wext</td>
					<td>Linux wireless extensions (generic)</td>
				</tr>
				<tr>
					<td>ndiswrapper</td>
					<td> Linux ndiswrapper</td>
				</tr>
				<tr>
					<td>ipw</td>
					<td>Intel ipw2100/2200 driver</td>
				</tr>
				<tr>
					<td>wired</td>
					<td>wired Ethernet driver</td>
				</tr>
				<tr>
					<td>test</td>
					<td>Test Treiber</td>
				</tr>
			</tbody>
		</table>
	</div>

	<div class="spacer05"></div>
		<h4>Allgemeine Treiber Empfehlung</h4>

			<p>Die Intel Pro Wireless Adapter (ipw2100, ipw2200 and ipw3945) benutzen alle das 'wext' Backend, es sei denn der Kernel ist &#228;lter als 2.6.14.</p>

			<p>Madwifi unterst&#252;tzt sowohl das 'wext' als auch das 'madwifi' Treiber Backend. 'wext' wird empfohlen, wenn auch 'madwifi' unter Umst&#228;nden besser funktionieren mag.</p>

			<p>Ndiswrapper unterst&#252;tzt seit Version 1.16 das 'ndiswrapper' Treiber Backend <b>nicht mehr</b>. Wenn man keine antiquierte ndiswrapper Version verwendet <b>muss der 'wext' Treiber f&#252;r ndiswrapper verwendet werden</b>.</p>

			<p>Die 'wpa_driver' Option wird in der <span class="highlight-3">/etc/network/interfaces</span> im f&#252;r das Ger&#228;t verwendeten Abschnitt definiert, zum Beispiel:</p>

<pre>
<i>(...)</i>
iface eth0 inet dhcp
	wpa-driver wext
	<i>. . . . . andere Optionen</i>
<i>(...)</i>
</pre>

			<h2>2. Modus #1: Managed Mode</h2>

			<p>Dieser Modus bietet die M&#246;glichkeit &#252;ber das 'wpa_supplicant' Verbindung zu einem bekannten Netzwerk herzustellen. Dies funktioniert &#228;hnlich wie mit dem 'wireless tools' Paket. Jedes Element das ben&#246;tigt wird um eine Verbindung herzustellen wird mit dem Pr&#228;fix 'wpa-' in der <span class="highligh-3"> /etc/network/interfaces</span> angef&#252;hrt. </p>

		<h6>Beispiel einer 'wpa.conf' f&#252;r 'Managed Mode' - Beispiel 1</h6>
<pre>Beispiel einer Mode #1 wpa.conf Datei - Beispiel 1.
ACHTUNG: der Wert 'wpa-psk' ist nur g&#252;ltig, wenn:

   1. er Klartext (ascii) und zwischen 8 und 63 Buchstaben oder
   2. er Hexadezimal und 64 Buchstaben lang ist. 

# Verbindung mit dem Zugangsknoten (access point, 'ap') der ssid 'NETBEER' und der
# WPA-PSK/WPA2-PSK Verschl&#252;sselung. Das 'wext' Treiber Backend von 'wpa_supplicant' wird
# verwendet da kein 'wpa-driver' definiert wurde.
# Das Passwort (passphrase) wird als ASCII (Klartext, plaintext) eingegeben. DHCP wird verwendet 
# um eine Netzwerkadresse zu erhalten.
#
iface wlan0 inet dhcp

        wpa-ssid NETBEER
        # plaintext passphrase
        wpa-psk PlainTextSecret

# Verbindung mit dem access point der ssid 'homezone' . Verschl&#252;sselung
# WPA-PSK/WPA2-PSK, wpa_supplicant verwendet das 'wext' Treiber Backend 
# Der psk (personal key) wird als verschl&#252;sselte hexadezimale Zeichenfolge eingegeben.
# DHCP wird verwendet um eine Netzwerkadresse zu erhalten.
#
iface wlan0 inet dhcp

        wpa-driver wext
        wpa-ssid homezone
        # hexadecimal psk is encoded from a plaintext passphrase
        wpa-psk 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f

# Verbindung mit dem access point der ssid 'HotSpot1' und der 
# bssid  '00:1a:2b:3c:4d:5e'. Verschl&#252;sselung WPA-PSK/WPA2-PSK,
# Verwendung des 'madwifi' Treiber Backends von wpa_supplicant.
# Die passphrase wird als plaintext Zeichenfolge eingegeben.
# Eine statische Adresszuweisung wird verwendet. 
#
iface ath0 inet static

        wpa-driver madwifi
        wpa-ssid HotSpot1
        wpa-bssid 00:1a:2b:3c:4d:5e
        # plaintext passphrase
        wpa-psk madhotspot
        wpa-key-mgmt WPA-PSK
        wpa-pairwise TKIP CCMP
        wpa-group TKIP CCMP
        wpa-proto WPA RSN
        # static ip settings
        address 192.168.0.100
        netmask 255.255.255.0
        network 192.168.0.0
        broadcast 192.168.0.255
        gateway 192.168.0.1

# Eine vom Benutzer bereitgestellte wpa_supplicant.conf wird für eth1 verwendet.
# Alle Netzwerkinformationen sind in der wpa_supplicant.conf enthalten.
# Kein wpa-driver Typ ist definiert, also wird wext verwendet
# DHCP is used to obtain a network address. 
#
iface eth1 inet dhcp

wpa-conf /path/to/wpa_supplicant.conf
</pre>


	<div class="divider" id="wpa1">
		<h2>Table of Common Options</h2>

			<p>Eine kurze &#220;bersicht der am h&#228;ufigsten benutzten 'wpa-' Optionen welche in der <span class="highlight-3"> /etc/network/interfaces </span> g&#252;ltig sind. Sie m&#252;ssen im Abschnitt des WLAN Ger&#228;tes stehen. Siehe auch weiter unter 'Wichtige Anmerkungen zur Managed Mode' um Informationen &#252;ber g&#252;ltige und ung&#252;ltige Werte des 'wpa-' Pr&#228;fix zu erhalten.</p>

			<p class="highlight-2">ACHTUNG: bei allen Werten die gRoß- bzw. klEiNschreiBung beachten!</p>

<pre>
Element		Beispiel Wert		Berschreibung
=======         =============           ===========
wpa-ssid	plaintextstring		setzt des Netzwerk's ssid

wpa-bssid	00:1a:2b:3c:4d:5e	bssid des Access Points

wpa-psk		0123456789....		your preshared wpa key. Benutze
					wpa_passphrase(8) um den psk-Key
					aus einer Passphrase zu
					generieren

wpa-key-mgmt	NONE, WPA-PSK, WPA-EAP,	Liste der akzeptierten 
					IEEE 802.1X Authentifizierung
 					Management Protokolle

wpa-group	CCMP, TKIP, WEP104,	Liste der akzeptierten group 	
		WEP40			ciphers für WPA

wpa-pairwise	CCMP, TKIP, NONE	Liste der paarweise akzeptierten
					ciphers für WPA

wpa-auth-alg	OPEN, SHARED, LEAP	Liste der erlaubten IEEE 802.11
					Authentifizierungsalgorhythmen

wpa-proto	WPA, RSN		Liste akzeptierter Protokolle

wpa-identity	myplaintextname		durch den Administrator
					bestimmter Benutzername
					(EAP authentication)

wpa-password	myplaintextpassword	Benutzerpasswort 
					(EAP authentication)

wpa-scan-ssid	0 or 1			Umschalten des ssid-scannens mit
					spezifischen Probe Request frames

wpa-ap-scan     0 or 1 or 2             Einstellen der wpa_supplicant 	
					Scannerlogik
</pre>
			<p>Die gesamten Funktionen des wpa_cli(8) sollten implementiert sein. Eine fehlende Funktion wird als Programmfehler (bug) angesehen und sollte als solcher berichtet werden. Patches sind immer willkommen.</p>


			<h2>Wichtige Anmerkungen zur Managed Mode</h2>

			<p>Fast alle 'wpa-' Optionen ben&#246;tigen zumindest eine definierte ssid. Nur zwei der Optionen haben einen globalen Effekt. Dies sind 'wpa-ap-scan' und 'wpa-preauthenticate'.</p>

			<p>Jede einem device in der interfaces(5) gegebene 'wpa-' Option gen&#252;gt den wpa_supplicant daemon aufzurufen.</p>

			<p>Das wpasupplicant ifupdown Skript macht Annahmen bez&#252;glich des 'Typs' der Eingabe die f&#252;r jede Option g&#252;ltig ist. Es vermutet zum Beispiel, dass manche Eingaben Klartext sind und setzt sie in Anf&#252;hrungszeichen, bevor sie an wpa_cli weitergegeben werden. Dieser f&#252;gt die Eingabe dann dem Netzwerk Block durch das wpa_supplicant ctrl_interface socket hinzu.</p>

			<p>'ifup' von Hand mit der '--verbose' Option aufzurufen zeigt alle Befehle (commands) die von wpa_cli verwendet werden um den Netzwerk Block zu bilden. Ist der Wert einer in der <span class="highilght-3">/etc/network/interfaces</span>definierten 'wpa-' Option in Anf&#228;hrungszeichen gesetzt, wurde angenommen, dass es sich um "plaintext", oder "ascii", Eingaben handelt.</p>

			<p>Mancher Werte 'Typ' einer Option, wie z.B. 'wpa-wep-key', wird als hexadezimale Folge angenommen. Der Werte 'Typ' der 'wpa-psk' Option wird jedoch durch eine simple Suchen nach nichthexadezimalen Zeichen bestimmt.</p>

			<h2>Wie wpasupplicant funktioniert</h2>

			<p>Wie bereits erw&#228;hnt wird jedes 'wpa_supplicant' spezifische Element mit dem Pr&#228;fix 'wpa-' aufgerufen. Jedes Element entspricht einer in den wpa_supplicant.conf(5), wpa_supplicant(8) und wpa_cli(8) man pages beschriebenen Eigenschaft des 'wpa_supplicant'.</p>

			<p>Der supplicant (Bittsteller) wird ohne jede Vorkonfiguration aufgerufen und wpa_cli bildet die Netzwerkkonfiguration aus den bereitgestellten Eingaben der 'wpa-cli' Zeilen. wpa_supplicant/wpa_cli legen nicht sofort Eigenschaften des Gert&#228;ts fest (wie iwconfig z.B.), sondern zeigt an welcher access point f&#252;r eine Verbindung geeignet ist. Nachdem das Ger&#2228;t die Gegend gescannt hat und der ap gefunden wurde werde, wenn der ap bereit ist, diese Eigenschaften gesetzt.</p>

			<p>Das Skript welches all dies macht ist hier:</p>

<pre> /etc/wpa_supplicant/ifupdown.sh</pre>

			<p>Es wird von run-parts ausgef&#252;hrt, welches selbst von ifupdown w&#228;hrend der 'pre-up', 'pre-down' und 'post-down' Phasen aufgerufen wird.</p>


			<p>In der 'pre-up' Phase wird ein wpa_supplicant daemon gestartet, gefolgt von einer Serie von wpi_cli Befehlen die eine Netzwerkkonfiguration  entsprechend der in <span class="highlight-3">/etc/network/interfaces</span> genutzten 'wpa-' Optionen f&#252;r das Ger&#228;t aufsetzen.</p>

			<p>Wenn wpa-roam benutzt wird, wird ein wpa_cli daemon in der 'post-up' Phase gestartet.</p>

			<p>In der 'pre-down' Phase wird der wpa_cli daemon gestoppt (killed), so er vorhanden ist.</p>

			<p>In der 'post-down' Phase wird der wpa_supplicant daemon gestopped (killed).</p>

			<h2>3. Modus #2: Roaming Mode</h2>

			<p>Das Paket (wpasupplicant) enth&#228;lt einen in sich geschlossenen, simplen roaming Mechanismus in Form eines wpa_cli action Skripts, /sbin/wpa_action. Bei Aktivierung vermutet wpa_action Kontrolle &#252;ber ifupdown. Die wpa_action(8) manpage beschreibt die technischen Details eingehend.</p>

			<p>Um ein roaming interface zu aktivieren f&#252;ge passe folgendes interfaces(5) Beispiel an:</p>

<pre>
iface eth1 inet manual
	wpa-driver wext
        wpa-roam /path/to/wpa_supplicant.conf
</pre>

			<p>Zwei daemons werden durch obiges Beispiel gestartet: wpa_supplicant und wpa_cli. Eine <span class="highlight-3">/etc/wpa_supplicant.conf</span> ist notwendig. Einen guten Anfang bietet das Konfigurationsbeispiel, kopiere es wie folgt nach <span class="highlight-3">/etc</span>:</p>

<pre>
cp /usr/share/doc/wpasupplicant/examples/wpa_supplicant.conf.template \
        /etc/wpa_supplicant/wpa_supplicant.conf
</pre>


			<p>Es ist notwendig diese Konfigurationsdatei editieren und f&#252;r alle bekannten Netzwerke Netzwerkbl&#246;cke hinzuzuf&#252;gen. Wer sich unsicher ist was das bedeutet sollte jetzt die man page wpa_supplicant.conf(5) lesen.</p>

			<p>F&#252;r jedes Netzwerk kann eine eigene 'id_str' verwendet werden. Diese sollte eine simple Zeichenfolge sein. Diese Folge bildet die Basis der Netzwerkprofile; es entspricht einem logischen Interface (Schnittstelle), das in der interfaces(5) definiert wurde. Wenn keine 'id_str' f&#252;r ein Netzwerk gegeben ist, wird von wpa_action das 'default' Interface benutzt. Das 'default' interface kann durch die  'wpa-default-iface' Option definiert werden.</p>

			<p>Was all das bedeutet wird mit folgendem (&#252;bersetztem) Beispiel aus der wpa_action(8) manpage illustriert:</p>

		<h6><span class="highligh-3">/etc/wpa_supplicant.conf</span> Beispiel</h6>			
<pre>wpa_supplicant.conf example:
network={

        ssid="foo"
        # der folgende id_str ruft mit /sbin/wpa_action 'ifup uni' auf
        id_str="uni"
        key_mgmt=NONE
}

network={

        ssid="bar"
        #der folgende id_str ruft mit /sbin/wpa_action ifup home_static' auf
        id_str="home_static"
        psk=123456789...

}


network={

        ssid=""
        # kein 'id_str' gegeben, /sbin/wpa_action ruft 'ifup default' auf
        key_mgmt=NONE

}
</pre>
</div>
	<div class="divider" id="wpa2">
		<h6><span class="highlight-3">/etc/network/interfaces</span> Beispiel</h6>
<pre>/etc/network/interfaces Beispiel:
# das roaming interface muss die manuelle inet Methode nutzen
# 'allow-hotplug' oder 'auto' stellt sicher, dass der daemon automatisch startet
allow-hotplug eth1
iface eth1 inet manual

        wpa-driver wext
        wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf

 
# kein id_str, 'default' wird zur Absicherung als mapping target verwendet
iface default inet dhcp


# id_str="uni"
iface uni inet dhcp

# id_str="home_static"
iface home_static inet static

        address 192.168.0.20
        netmask 255.255.255.0
        network 192.168.0.0

        broadcast 192.168.0.255
        gateway 192.168.0.1
</pre>

			<p>Ein logisches Interface wird durch ifup gestartet (und durch ifdown gestoppt) wenn wpa_supplicant sich mit dem durch die 'id_str' in der <span class="highlight-3">/etc/wpa_supplicant.conf</span> zugeordneten Netzwerk verbindet (oder die Verbindung trennt).</p>

			<p>Ein Log der von /sbin/wpa_action durchgef&#252;hrten Aktionen wird als /var/log/wpa_action.log gespeichert, bitte an Problemberichte das Log anh&#228;ngen.</p>

<h2>Kontrolle des Roaming Daemon durch wpa_action</h2>

			<p>Ist der roaming daemon gestartet, it assumes control of ifupdown. That is; wpa_cli calls ifup when wpa_supplicant has successfully associated with an access point, and calls ifdown when the connection is lost or terminated. While the roaming daemon is active, ifupdown should not be controlled directly by manually issued commands, rather /sbin/wpa_action is supplied to stop and reload the roaming daemon. For example, to stop the romaing daemon on the device 'eth1':</p>

<pre>wpa_action eth1 stop</pre>


			<p>When it is required to update the roaming daemon with  a new networks details, it can be done without stopping it. Edit the wpa_supplicant.conf file that is being used by the daemon with the new networks details, add optional network settings to /etc/network/interfaces that are specific to the new network (linked by the 'id_str') and then 'reload' the daemon like so:</p>

<pre>wpa_action eth1 reload</pre>

			<p>For the complete technical details of what wpa_action can do, read the wpa_action(8) manpage.</p>

</div>
	<div class="divider" id="wpa3">
		<h2>Fine Tuning the Roaming Setup</h2>

			<p>You may face situations where multiple known access points are in close proximity. You can choose which one is preferred manually, with wpa_cli or wpa_gui, or you can give each network its own priority. This is provided by the 'priority' option of wpa_supplicant.conf.</p>

</div>
	<div class="divider" id="wpa4">
		<h2>The Logfile</h2>

			<p>All activity of the roaming dameon is logged to /var/log/wpa_action.log. The following information is logged:</p>

		<p>*time and date<br />
		*interface name and action event<br />
		*values of enviromental variables (WPA_ID, WPA_ID_STR, WPA_CTRL_DIR)<br />
		*ifupdown command executed<br />
		*wpa_cli status (based on WPA-PSK, network may display different info)<br />
		*bssid<br />
		*ssid<br />
		*id<br />
		*id_str<br />
		*pairwise_cipher<br />
		*group_cipher<br />
		*key_mgmt<br />
		*wpa_state<br />
		*ip_address</p>
	
	
</div>
	<div class="divider" id="wpa5">	
		<h2>Using External Mapping Scripts (e.g. guessnet)</h2>

			<p>In addition to the internal mapping of logical interfaces via 'id_str', wpa_action can call external mapping scripts. A mapping script should return the name of the logical interface which should be brought up. Any mapping script that works from ifupdowns mapping mechanism (see man interfaces) should also work when called from wpa_action.</p>

			<p>To call a mapping script add a line 'wpa-mapping-script name-of-the-script' to  the interfaces stanza of the physical roaming device. (You may have to specify the absolute path to the mapping script.)</p>


			<p>The contents of lines starting with wpa-map are passed to stdin of the mapping  script. Since ifupdown allows only one wpa-map line you can append any number to wpa-map for additional lines. For example:</p>

<pre>
iface wlan0 inet manual
        wpa-driver wext
        wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
        wpa-mapping-script guessnet-ifupdown
        wpa-map0 home
        wpa-map1 work
        wpa-map2 school
        # ... additional wpa-mapX lines as required
</pre>
			<p>By default the mapping script will only be used when no 'id_str' is available for the current network. If you want to completely disable 'id_str' matching and use only an external mapping script, use the 'wpa-mapping-script-priority 1' option to override default behaviour.</p>

			<p>If the mapping script returns an empty string wpa_action will fallback to using the 'default' interface, unless an alternative is defined by the 'wpa-roam-default-iface' option.</p>

			<p>Below is an advanced example, using guessnet-ifupdown as the external mapping script.</p>

		<h6>/etc/network/interfaces with external mapping example</h6>
<pre>/etc/network/interfaces with external mapping example:
allow-hotplug wlan0
iface wlan0 inet manual

        wpa-driver wext
        wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
        wpa-roam-default-iface default-wparoam
        wpa-mapping-script guessnet-ifupdown
        wpa-map default: default-guessnet
        wpa-map0 home_static
        wpa-map1 work_static


# school can only be chosen via 'id_str' matching
iface school inet dhcp

        # resolvconf
        dns-nameservers 11.22.33.44 55.66.77.88

iface home_static inet static

        address 192.168.0.20
        netmask 255.255.255.0

        network 192.168.0.0
        broadcast 192.168.0.255
        gateway 192.168.0.1
        test peer address 192.168.0.1 mac 00:01:02:03:04:05


iface work_static inet static

        address 192.168.3.200
        netmask 255.255.255.0
        network 192.168.3.0
        broadcast 192.168.3.255

        gateway 192.168.3.1
        test peer address 192.168.3.1 mac 00:01:02:03:04:05

iface default-guessnet inet dhcp

iface default-wparoam inet dhcp
</pre>

			<p>In this example wpa_action will use guessnet for the selection of a suitable logical interface only when no 'id_str' option has been provided for the current network in the provided wpa_supplicant.conf.</p>

			<p>The 'wpa-map' lines provide guessnet with the logical interfaces that are to be tested as well as the default interface to be used when all tests fail. The 'test' lines of each logical interface are used by guessnet to determine if we are actually connected to that network. For instance, guessnet will choose the logical interface 'home_static' if there's a device with an IP address of 192.168.0.1 and MAC of 00:01:02:03:04:05 on the current network. If all tests fail, the 'default-guessnet' interface will be configured.</p>


			<p>Please, read the guessnet(8) manpage for more information.</p>

			<h2>4. Troubleshooting</h2>

			<p>In order to debug connection, association and authentication problems, we suggest starting `wpa_cli -i &lt;interface&gt;` in a different shell, before starting the interface. Use the command 'level 0' first, to get all debug messages. Then use `ifup --verbose &lt;interface&gt;` to get verbose debug messages from the script starting wpasupplicant.</p>

	<div class="divider" id="wpa6">
		<h2>Hidden ssids</h2>

			<p>For reference, see #358137. In order to be able to associate to hidden ssids, please try to set the option 'ap_scan=1' in the global section, and  'scan_ssid=1' in your network block section of your wpa_supplicant.conf file. If you are using the managed mode, you can do so by these stanzas:</p>

<pre>
iface eth1 inet dhcp
wpa-conf managed
wpa-ap-scan 1
wpa-scan-ssid 1
# ... additional options for your setup
</pre>

			<p>According to #368770, association can take a very long time to associate to WEP  secured networks. In some cases, setting the parameter 'ap_scan=2' in the config file, (or using a 'wpa-ap-scan 2' stanza, which is equivalent) can greatly help to speed up association.</p>

			<h2>5. Security Considerations</h2>

	<div class="divider" id="wpa7">
		<h2>Configuration File Permissions</h2>
			<p>It is important to keep PSK's and other sensitive information concerning your network settings private, therefore ensure that important configuration files containing such data are only readable by their owner. For example:</p>

<pre>
chmod 0600 /etc/network/interfaces
# substitute the path of your wpa_supplicant.conf file
chmod 0600 /etc/wpa_supplicant/wpa_supplicant.conf
</pre>
			<p>By default, /etc/network/interfaces is world readable, and thus unsuitable for containing secret keys and passwords.</p>


	</div>
	<div class="spacer05"></div>
</div>
</div>

</div>
</body>
</html>
