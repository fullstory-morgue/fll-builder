install_linux_kernel() {
	local KZIP="$1"
	local KDIR=$(mktemp -p $FLL_BUILD_CHROOT -d fll.kernel.XXXX)
	local KTYPE KDEBS KURL

	[[ $KZIP ]] || return 1

	case "$KZIP" in
		*kernel-*.zip)
			[[ -f $KZIP ]] && KTYPE="file" || KTYPE="url"
			;;
		*)
			echo "Unrecognised kernel package: $KZIP"
			return 1
			;;
	esac

	# use bash regexp to determine kernel version
	if [[ $KZIP =~ '.*kernel-(.*).zip$' ]]; then
		# export KVERS, it is later used as a filter for source uri list
		export KVERS=${BASH_REMATCH[1]}
	else
		echo "Unable to determine version of kernel.zip package"
		return 1
	fi

	case "$KTYPE" in
		"file")
			cp "$KZIP" "$KDIR"/kernel-"$KVERS".zip
			;;
		"url")
			wget -T3 "$KZIP" -O "$KDIR"/kernel-"$KVERS".zip
			;;
	esac

	pushd "$KDIR" >/dev/null
		unzip kernel-"$KVERS".zip
	popd >/dev/null

	chroot_install_debs_from_dir "$KDIR"

	# link-up kernel headers/documentation
	chroot_exec rm -vf /lib/modules/"$KVERS"/build /lib/modules/"$KVERS"/source
	chroot_exec ln -vs linux-headers-"$KVERS" /usr/src/linux-"$KVERS"
	chroot_exec ln -vs /usr/src/linux-"$KVERS" /lib/modules/"$KVERS"/build
	chroot_exec ln -vs /usr/src/linux-"$KVERS" /lib/modules/"$KVERS"/source
	chroot_exec cp -vf /boot/config-"$KVERS" /usr/src/linux-"$KVERS"/.config
	chroot_exec rm -rf /usr/src/linux-"$KVERS"/Documentation
	chroot_exec ln -vs /usr/share/doc/linux-doc-"$KVERS"/Documentation \
		/usr/src/linux-"$KVERS"/Documentation
	chroot_exec ln -vs vmlinuz-"$KVERS" /boot/vmlinuz
	chroot_exec ln -vs initrd.img-"$KVERS" /boot/miniroot.gz
	
} 
