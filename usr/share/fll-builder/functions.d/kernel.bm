#!/bin/bash

install_linux_kernel() {
	local KZIP="$1"
	local KDIR=$(mktemp -p $FLL_BUILD_CHROOT -d fll.kernel.XXXX)
	local KTYPE KDEBS KURL

	[[ -f $KZIP ]] || return 1

	# use bash regexp to determine kernel version
	if [[ $KZIP =~ '.*/kernel-(.*).zip' ]]; then
		KVERS=${BASH_REMATCH[1]}
		# package list needs to filter these packages out :(
		export KVERS
	fi

	cp "$KZIP" "$KDIR"/kernel-"$KVERS".zip

	pushd "$KDIR" >/dev/null
		unzip kernel-"$KVERS".zip
	popd >/dev/null

	chroot_install_debs_from_dir "$KDIR"
	
	# link-up kernel headers/documentation
	chroot_exec rm -vf /lib/modules/"$KVERS"/build /lib/modules/"$KVERS"/source
	chroot_exec ln -vs linux-headers-"$KVERS" /usr/src/linux-"$KVERS"
	chroot_exec ln -vs /usr/src/linux-"$KVERS" /lib/modules/"$KVERS"/build
	chroot_exec ln -vs /usr/src/linux-"$KVERS" /lib/modules/"$KVERS"/source
	chroot_exec cp -vf /boot/config-"$KVERS" /usr/src/linux-"$KVERS"/.config
	chroot_exec rm -rf /usr/src/linux-"$KVERS"/Documentation
	chroot_exec ln -vs /usr/share/doc/linux-doc-"$KVERS"/Documentation \
		/usr/src/linux-"$KVERS"/Documentation
	chroot_exec ln -vs vmlinuz-"$KVERS" /boot/vmlinuz
	chroot_exec ln -vs initrd.img-"$KVERS" /boot/miniroot.gz
	
	# save kernel.zip if building source iso
	if [[ $FLL_BUILD_SOURCE_REL ]]; then
		# XXX: what about linux + modules source code?
		cp -v "$KDIR"/kernel-"$KVERS".zip "$FLL_BUILD_SOURCE"/kernel/kernel-"$KVERS".zip
	fi
}
